ts<-sum(bp$V4)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,1000)
as<-sum(bp$V4)
cs<-sum(bp$V2)
gs<-sum(bp$V8)
ts<-sum(bp$V6)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,1000)
as<-sum(bp$V4)
cs<-sum(bp$V8)
gs<-sum(bp$V2)
ts<-sum(bp$V6)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
relprop
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
relprop
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,1000)
as<-sum(bp$V2)
cs<-sum(bp$V4)
gs<-sum(bp$V6)
ts<-sum(bp$V8)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,1000)
as<-sum(bp$V4)
cs<-sum(bp$V2)
gs<-sum(bp$V8)
ts<-sum(bp$V6)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,1000)
as<-sum(bp$V2)
cs<-sum(bp$V4)
gs<-sum(bp$V6)
ts<-sum(bp$V8)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
# start codon ATG loss
relprop
#### Calculate cond usage bias using new version from Grey
newcod<-c("UUU", 21.8,678320,"UCU", 25.2,782818,"UAU", 14.6,455089,"UGU", 10.5,327640,
"UUC",20.7,642407,"UCC", 11.2,348173,"UAC", 13.7,427132,"UGC",7.2,222769,
"UUA",12.7,394867,"UCA", 18.3,568570,"UAA",0.9, 29405,"UGA",1.2, 36260,
"UUG",20.9,649150,"UCG",9.3,290158,"UAG",0.5, 16417,"UGG" ,12.5,388049,
"CUU",24.1,750114,"CCU", 18.7,580962,"CAU", 13.8,428694,"CGU",9.0,280392,
"CUC",16.1,500524,"CCC",5.3,165252,"CAC",8.7,271155,"CGC",3.8,117543,
"CUA",9.9,307000,"CCA", 16.1,502101,"CAA", 19.4,604800,"CGA",6.3,195736,
"CUG",9.8,305822,"CCG",8.6,268115,"CAG", 15.2,473809,"CGG",4.9,151572,
"AUU",21.5,668227,"ACU", 17.5,544807,"AAU", 22.3,693344,"AGU" ,14.0,435738,
"AUC",18.5,576287,"ACC", 10.3,321640,"AAC", 20.9,650826,"AGC", 11.3,352568,
"AUA",12.6,391867,"ACA", 15.7,487161,"AAA", 30.8,957374,"AGA" ,19.0,589788,
"AUG",24.5,762852,"ACG",7.7,240652,"AAG", 32.7,1016176,"AGG" ,11.0,340922,
"GUU",27.2,847061,"GCU", 28.3,880808,"GAU", 36.6,1139637,"GGU", 22.2,689891,
"GUC",12.8,397008,"GCC" ,10.3,321500,"GAC", 17.2,535668,"GGC",9.2,284681,
"GUA",9.9,308605,"GCA", 17.5,543180,"GAA", 34.3,1068012,"GGA", 24.2,751489,
"GUG",17.4,539873,"GCG",9.0,280804,"GAG", 32.2,1002594,"GGG", 10.2,316620
)
newcod<-matrix(newcod,ncol=3,byrow=T)
cb<-as.numeric(newcod[,3])
cb<-cb/sum(cb)
names(cb)<-newcod[,1]
names(cb)<-chartr("U","T",names(cb))
codonusage<-cb[names(code)]
codonusage<-sapply(1:64,function(x) codonusage)
Freqchanges<-(codonusage*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
synonymous=sum(Freqchanges[NSS=="S"])
message("Ratios of neutral mutations corrected for codon composition")
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymou")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
message("Read nucleotide frequencies")
bp<-read.table('~/Downloads/neutral_codon_mutations/atgc_cds_counts.txt',fill=T)
# bp[,]
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,10000)
as<-sum(bp$V2)
cs<-sum(bp$V4)
gs<-sum(bp$V6)
ts<-sum(bp$V8)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
message("Read nucleotide frequencies")
bp<-read.table('~/Downloads/neutral_codon_mutations/atgc_cds_counts.txt',fill=T)
# bp[,]
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,20000)
as<-sum(bp$V2)
cs<-sum(bp$V4)
gs<-sum(bp$V6)
ts<-sum(bp$V8)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
message("Read nucleotide frequencies")
bp<-read.table('~/Downloads/neutral_codon_mutations/atgc_cds_counts.txt',fill=T)
# bp[,]
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,100000)
as<-sum(bp$V2)
cs<-sum(bp$V4)
gs<-sum(bp$V6)
ts<-sum(bp$V8)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
message("Read nucleotide frequencies")
bp<-read.table('~/Downloads/neutral_codon_mutations/atgc_cds_counts.txt',fill=T)
# bp[,]
bp2<-na.omit(bp) # there are some exons so small that do not contain one base. their effect in the total is very small so remove
bp<-bp2
bp<-head(bp,100000)
as<-sum(bp$V4)
cs<-sum(bp$V8)
gs<-sum(bp$V2)
ts<-sum(bp$V6)
relprop<-c(as,cs,gs,ts)/sum(as,cs,gs,ts)
relprop
# relpropbackup<-relprop
#### Read mutation spectrum
message("Read SNP frequencies")
snpfreq<-read.table("~/Desktop/snp_freq_coding.txt",header=T)
snpfreq
# Correcting those by the relative proportion of SNPs
# Create translator of frequency of each mutation
snpfreqtr<-snpfreq$N/sum(snpfreq$N)
names(snpfreqtr)<-paste0(snpfreq$ref,snpfreq$alt)
snpfreqtr<-c(snpfreqtr,"NA"="NA")
# Create new transition matrix based on the SNP frequencies in Ath
Q.<-Q
Q.[]<-as.numeric(snpfreqtr[as.character(Q.)])
Q.<-apply(Q.,2,as.numeric)
# dim(Q.)
# Q.
# create new transition matrix for
Q2<-apply(Q,2,function(x)substr(x,start = 1,stop = 1))
# Q2
bptr<-relprop
names(bptr)<-c('A','C','G','T')
Q2[]<-as.numeric(bptr[as.character(Q2)])
Q2<-apply(Q2,2,as.numeric)
Freqchanges<-(Q.*Q2)[!is.na(Q)]
Freqchanges<-Freqchanges/sum(Freqchanges)
NSS<- NS[!is.na(Q)]
message("Ratios of neutral mutations corrected for base frequencies and SNP transition frequency")
synonymous=sum(Freqchanges[NSS=="S"])
# corrected for base composition of genes and frequency of mutations
message("Nonsynonymous / Synonymous")
sum(Freqchanges[NSS=="NS"]) /synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPLOSS / Synonymous")
sum(Freqchanges[NSS=="STOPLOSS"]) / synonymous
# corrected for base composition of genes and frequency of mutations
message("STOPGAIN / Synonymous")
sum(Freqchanges[NSS=="STOPGAIN"]) / synonymous
